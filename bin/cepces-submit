#!/usr/bin/env bash
#
# This file is part of cepces.
#
# cepces is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cepces is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cepces.  If not, see <http://www.gnu.org/licenses/>.
#
# This script is not supposed to be executed directly. It should only be called
# by certmonger.

# Lets be strict about things.
set -u

# Source the configuration file.
. /etc/cepces/cepces-submit.conf

# Set some default values
INIT=false
[ "${KINIT_REALM-}" = "" ] && REALM="" || REALM="@${KINIT_REALM-}"
[ "${DEBUG-}" = "true" ] && DEBUG_ARGS="--debug"
 
# Check if a TGT is required.
if [ "${KINIT}" = "true" ]
then
	# Check if we have a TGT, or are forced to initialize a new one.
	if ! klist -s || [ "${KINIT_FORCE-false}" = "true" ]
	then
		# No TGT or forced.
		KEYTAB="${KINIT_KEYTAB-/etc/krb5.keytab}"

		# If no keytab exists, exit with EUNDERCONFIGURED.
		[ -f "${KEYTAB}" ] || (echo "No keytab found" ; exit 4)
		
		# Check if we have a principal to work with.
		if ! [ "${KINIT_PRINCIPAL-}" = "" ]
		then
			# Try to initialize a TGT.
			if kinit -k -t "${KEYTAB}" "${KINIT_PRINCIPAL}${REALM}"
			then
				INIT=true
			else
				echo "Failed to obtain TGT for ${KINIT_PRINCIPAL}."
				exit 4
			fi
		else
			# Guess.
			for UPN in \
				"$(hostname -s | tr '[:lower:]' '[:upper:]')\$" \
				"HOST/$(hostname -s | tr '[:lower:]' '[:upper:]')" \
				"HOST/$(hostname -f)"
			do
				# Proceed until we find a match, if any.
				if ! [ "${INIT}" = "true" ]
				then
					if kinit -k -t "${KEYTAB}" "${UPN}${REALM}" >/dev/null 2>&1
					then
						INIT=true
						break
					fi
				fi
			done
			
			# Last check.
			if ! [ "${INIT}" = "true" ]
			then
				echo "Failed to obtain TGT." 1>&2
				exit 4
			fi
		fi 
	fi
fi

cepces submit ${DEBUG_ARGS-} 2> >(logger -t $(basename $0))
RETVAL=${PIPESTATUS[0]}

# Check if we initialized a TGT and should clean up.
if [ "${INIT}" = "true" ] && [ "${KINIT_CLEANUP-false}" = "true" ]
then
	kdestroy
fi

exit ${RETVAL}
